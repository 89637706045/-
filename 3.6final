#include<stdlib.h>
#include<stdio.h>
#include<math.h>
#include<string.h>

typedef struct coodinaty{//coordinaty -- vnytri structyry
	int x;
	int y;
}coord;// potom ispolsv bydet

int main()
{
	printf("Nachnite vvod coordinat");
	
	coord * adress_struktury=(coord*)malloc(5*sizeof(coord));
	/*sozdyal 5 adresov, iboodin bydet vremennoy peremen */
	
	int i = 0, q = 0;
	
	for(i = 0; i < 4; ++i)
	{
		printf("Vvedite coordinaty po osi X.\n");
		scanf("%d", &(adress_struktury[i].x));
		printf("Vvedite coordinaty po osi Y.\n");
		scanf("%d", &(adress_struktury[i].y));
	}
	
	/* sortiryem po vozvrastanya coordinat po osi "x" */
	
	for(q = 0; q < 4; ++q)
	{
		for(i = 0; i < 3; ++i)
		{
			if(adress_struktury[i].x > adress_struktury[i+1].x)
			{
				adress_struktury[5] = adress_struktury[i];
				adress_struktury[i] = adress_struktury[i+1];
				adress_struktury[i+1] = adress_struktury[5];
			}
			
		}
	}
	
	printf("Otladka sortirovki: \n");
	for(i = 0; i < 4; ++i){
		printf("%d %d\n", adress_struktury[i].x, adress_struktury[i].y);
	}
	
	float l[2] = {};
	
	l[0]=pow(((pow((adress_struktury[0].x-adress_struktury[1].x),2))+(pow((adress_struktury[0].y-adress_struktury[1].y),2))),0.5);
	l[1]=pow(((pow((adress_struktury[0].x-adress_struktury[2].x),2))+(pow((adress_struktury[0].y-adress_struktury[2].y),2))),0.5);
	
	l[0] = l[0] * l[1];
	printf("%lg", l[0]);
	free(adress_struktury);
	return 0;	
}
