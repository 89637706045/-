#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>

typedef struct struct1{
    struct struct1* prev;
    struct struct1* next;
    
	char name[30];
	char phone_num[40];
	}abonent;

int find(abonent * head);
int delite(abonent * head);
int sort(abonent * head);
int add_element(abonent * head);
abonent * create_spis();
int menu();

int main(){
	
	int n =0;
	abonent * head;
	printf("Dobro pojalovat v telefonnyu zapisnyu knigky,\n");
	//printf("Printf soday golovnoy element.\n")
	head = create_spis();//sozdyaem spisok
	
	while(1){
		n = menu();
		if(n == 1){
			n = add_element(head);
			printf("Return value dobavlenya: %d\n", n);
			printf("Vypolnyaetsya sortirovka po alfavity\n");
			//n = sort(head);
			printf("Return value sortirovki: %d\n", n);
		}
		if(n == 2){
			n = find(head);
			printf("Return value poisca: %d\n", n);
		}
			if(n == 3){
			n = delite(head);
			printf("Return value ydalenia: %d\n", n);
			printf("sozdat novyi spisok --1\n, ili vyiti iz programmy -- 2?\n");
			scanf("%d", &n);
			if(n == 1){head = create_spis();}
			else{return 0;}
		}
			if(n == 4){break;}
	}
	
	printf("Xotite otchistyt operativy, ot spiska?\n1 -- Da\n2 -- Net\n");
	scanf("%d", &n);
	if(n == 2){
		return 0;
	}
	
	n = delite(head);
	printf("Return value ydalenia: %d\n", n);
	puts(" ");
	printf("Dosvidanya.\n");
	return 0;
}

int find(abonent * head){
	printf("Vvedite imya dlya poiska\n");
    char sname[30];
    scanf("%29s",sname);
    int counter = 0;
    abonent * temp = head;
    
    while((temp -> next) != NULL){
    	if(strcmp(sname,temp->name) == 0){
    		printf("Nayden:\n%s\n%s\n",temp->name, temp->phone_num);
    		++counter;
		}
	temp = temp -> next;
	}
   if(strcmp(sname,temp->name) == 0){
    		printf("Nayden:\n%s\n%s\n",temp->name, temp->phone_num);
			counter;
		}
	if(counter == 0){printf("K sojaleniy, nuchego ne naydeno.");}
	}

int delite(abonent * head){//ydalenie spiska
	abonent * current = head;
	/*idem v konec spisca */
	while(current -> next != NULL){
	    current = current->next;
	}
	/*nachinaem ydalat s consa spiska*/
	abonent * temp;
	while(current->prev != NULL){
		temp = current;
		current = current->prev;
		free(temp);
	}	
    
	//free(current);
	free(head);
	return 0;
}

int sort(abonent * head){
	int i = 0;
	abonent * current = head;
	abonent * temp = head;//current + 1 = temp
	abonent * temp1 = temp -> next;
	abonent * current1;
	if(((temp -> next) == NULL)||((temp1 -> next) == NULL)){
		printf("Ne xvataet elementov dlya organizacii sortirovki.\n");
		return 0;
	}
	temp = temp -> next;//1
	temp = temp -> next;//2
	current = current -> next;//1
	int n1 = 0, n2 = 0;
	while((temp -> next) == NULL){
		for(i = 0; i < 30; ++i){
		n2 = (int)(temp->name[i]);
		n1 = (int)(current->name[i]);
		if(n2 < n1){
			temp1 = temp;
			current1 = current -> prev;
			current1 -> next = temp;
			temp -> prev = current1;
			temp -> next = current;
			current -> prev = temp1;
			current -> next = temp1 -> next;
			temp1 = temp1 -> next;
			temp1 -> prev = current;
			temp1 = temp;
			temp = current;
			current = temp1;
			break;//dlya cikla for, a mojet on srabotat slychaino na while?
			}
		}	
		temp = temp -> next;
		current = current -> next;
	}
	n1 = 0; n2 = 0;
	for(i = 0; i < 30; ++i){
		n2 = (int)(temp->name[i]);
		n1 = (int)(current->name[i]);
		if(n2 < n1){
			temp1 = temp;
			current1 = current -> prev;
			current1 -> next = temp;
			temp -> prev = current1;
			temp -> next = current;
			current -> prev = temp1;
			current -> next = temp1 -> next;
			temp1 = temp1 -> next;
			temp1 -> prev = current;
			temp1 = temp;
			temp = current;
			current = temp1;
			break;//dlya cikla for
			}
		}
	return 0;	
}

int add_element(abonent * head){
	abonent * cur = head;
	
	printf("Vvedite imya\n");
    char imya[30];
    scanf("%29s",imya);
    printf("Vvedite telefon\n");
	char tel[40];
	scanf("%39s",tel);
	
	abonent * vstav = (abonent *)malloc(sizeof(abonent *));
	int i = 0;
	
	for(i = 0; i < 30; ++i){vstav->name[i] = imya[i];}
	for(i = 0; i < 40; ++i){vstav->phone_num[i] = tel[i];}
		
	while(cur -> next != NULL){
		cur = cur -> next;
	}
	
	vstav -> next = NULL;
	vstav -> prev = cur;
	cur -> next = vstav;
	return 0;
}

abonent * create_spis(){//sozdyaem spisok
	abonent * head =(abonent *)malloc(sizeof(abonent *));
    head->next = NULL;
    head->prev = NULL;
    return head;
}

int menu(){
	printf("Vvedite comandy, polny spisok prikazov mogno polychit po zanrosy \"info\".\n");
	char com[50], n = 0;
	scanf("%49s",com);
	if ((strcmp(com,"INFO") == 0) || (strcmp(com,"info") == 0)){
		printf("find\ninsert\ndelite\nbreak\ninfo\n");return 0;}	
		
	if((strcmp(com,"FIND") == 0) || (strcmp(com,"find") == 0)){return 2;}
	
	if((strcmp(com,"INSERT") == 0) || (strcmp(com,"insert") == 0)){return 1;}
	
	if((strcmp(com,"DELETE") == 0) || (strcmp(com,"delete") == 0)){return 3;}
	
	if((strcmp(com,"BREAK") == 0) || (strcmp(com,"break") == 0)){return 4;}
	
	//if
}
